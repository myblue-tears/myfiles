<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunpoit.oa.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xunpoit.oa.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  	<!-- 一个用户对应一个人员，就是一对一，在mybatis中一对一就是多对一 -->
    <association property="person"
				  javaType="com.xunpoit.oa.entity.Person"
				  select="selectPersonById"
				  column="person_id"/>
    
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, person_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询用户相对应的人员 -->
  <select id="selectPersonById" resultType="com.xunpoit.oa.entity.Person" parameterType="java.lang.Integer">
   	select id, name, sex, address, age, duty, phone, org_id
    from t_person
    where id = #{id}
  </select>
  
  <!-- 登录查询用户，根据用户名和密码 -->
  <select id="login" resultMap="BaseResultMap" parameterType="com.xunpoit.oa.entity.User">
   	select 
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{userName} and password=#{password}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xunpoit.oa.entity.User" >
    insert into t_user (id, user_name, password, 
      person_id)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{person.id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xunpoit.oa.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="person != null" >
        person_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="person != null" >
        #{person.id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunpoit.oa.entity.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="person != null" >
        person_id = #{person.id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunpoit.oa.entity.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      person_id = #{person.id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>